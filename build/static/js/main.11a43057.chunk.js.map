{"version":3,"sources":["utils/API.js","components/SearchBar.js","components/Table.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","SearchBar","props","console","log","search","className","htmlFor","onChange","handleInput","value","name","type","placeholder","id","onClick","handleFormSubmit","Table","state","employees","ascending","searchEmployee","API","then","res","setState","data","results","catch","err","handleInputChange","event","target","preventDefault","filteredEmp","filter","employee","first","toLowerCase","last","sortEmployees","sortedList","sort","a","b","this","scope","map","index","email","dob","date","substring","React","Component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11a43057.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?results=50\";\n\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\nexport default {\n  search: function() {\n    return axios.get(BASEURL);\n  }\n};","import React from \"react\";\n// import Table from \"./Table\";\n\n\n//search for employee by name in search bar\n\n\nfunction SearchBar(props) {\n    console.log(props.search);\n \n    return (\n        <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"search\">Search directory:</label>\n                <input\n                    onChange={props.handleInput}\n                    value={props.search}\n                    name=\"search\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"\"\n                    id=\"search\"\n                />\n                <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n                    Search\n          </button>\n            </div>\n        </form>\n    )\n}\n\n\n\nexport default SearchBar;","import React from \"react\";\nimport API from \"../utils/API\";\nimport SearchBar from \"./SearchBar\";\n\n\n//Search Results table in Act 19 is = table.js -Namita\n\nclass Table extends React.Component {\n\n    state = {\n        employees: [],\n        search: \"\",\n        ascending: true\n    };\n\n    // When this component mounts, search the API for random users\n    componentDidMount() {\n        this.searchEmployee();\n    }\n\n    searchEmployee = () => {\n        API.search()\n            .then(res => {\n                // console.log(\"API results\", res.data.results)\n                this.setState({ employees: res.data.results })\n            }\n            )\n            .catch(err => console.log(err));\n    };\n\n    handleInputChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({ [name]: value });\n\n\n    };\n\n    //Filtering Employees\n    handleFormSubmit = event => {\n        // Preventing the default behavior of the form submit (which is to refresh the page)\n        event.preventDefault();\n\n        console.log(this.state.search)\n\n        const filteredEmp = this.state.employees.filter(employee =>\n            employee.name.first.toLowerCase() === this.state.search.toLowerCase() ||\n            employee.name.last.toLowerCase() === this.state.search.toLowerCase()\n        )\n        console.log(\"Filtered Emp\", filteredEmp);\n        //updating the employee state variable with the new filtered value. The original employee state value came from the API call and componantDidMount()\n        this.setState({ employees: filteredEmp })\n\n        //reset Values \n        if (this.state.search === \"\") {\n            this.searchEmployee()\n        }\n    };\n\n    sortEmployees = event => {\n        event.preventDefault();\n        console.log(this.state.ascending)\n        if (this.state.ascending === true) {\n            this.setState({ ascending: false })\n        } else {\n            this.setState({ ascending: true })\n        }\n        const sortedList = this.state.employees.sort((a, b) => {\n            //In case of Ascending \n            if (this.state.ascending === true) {\n                if (a.name.first < b.name.first) {\n                    return -1;\n                }\n                if (a.name.first > b.name.first) {\n                    return 1;\n                }\n                return 0;\n\n            }else { \n                //In case of Descending \n                if (a.name.first < b.name.first) {\n                    return 1;\n                }\n                if (a.name.first > b.name.first) {\n                    return -1;\n                }\n                return 0;\n            }\n\n         })\n        console.log(\"Sort List:\", sortedList)\n\n    }\n\n    render() {\n        return (\n            <div>\n                <SearchBar\n                    search={this.state.search}\n                    handleFormSubmit={this.handleFormSubmit}\n                    handleInput={this.handleInputChange}\n                />\n                <hr />\n                <table className=\"table table-dark\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">ID</th>\n                            <th scope=\"col\">First<span onClick={this.sortEmployees}> &#9661; </span></th>\n                            <th scope=\"col\">Last</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">DOB</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.employees.map((employee, index) => (\n                            <tr id={index} key={index}>\n                                <th scope=\"row\">{index + 1}</th>\n                                <td>{employee.name.first}</td>\n                                <td>{employee.name.last}</td>\n                                <td>{employee.email}</td>\n                                <td>{employee.dob.date.substring(0, 10)}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n\n            </div>\n        );\n    }\n}\n\nexport default Table;","import React from \"react\";\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <h1>Employee Directory</h1>\n        </div>\n    )\n\n}\n\n\nexport default Header;","import './App.css';\nimport Table from \"./components/Table\";\nimport Header from \"./components/Header\";\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n\n      <Table />\n    </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}